{"version":3,"sources":["redux/auth/auth-actions.js","redux/auth/auth-reducer.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","redux/store.js","Components/Container/Container.jsx","Components/Navigation.jsx","Components/UserMenu/default-avatar.jpg","Components/UserMenu/UserMenu.js","Components/AuthNav.jsx","Components/AppBar/AppBar.jsx","Components/Routes/PrivateRoute.jsx","Components/Routes/PublicRoute.jsx","App.js","index.js","redux/contacts/contacts-actions.js","Components/UserMenu/user-menu.module.css","redux/contacts/contacts-reducer.js","Components/Container/Container.module.css"],"names":["registerRequest","createAction","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","initialUserState","name","email","user","createReducer","authActions","_","payload","token","setError","error","isAuthenticated","combineReducers","axios","defaults","baseURL","headers","common","Authorization","register","credentials","dispatch","a","post","response","data","console","log","message","logOut","logIn","getCurrentUser","getState","persistedToken","auth","get","getIsAuthenticated","state","getUsername","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contacts","contactsReducer","persistor","persistStore","Container","children","className","styles","link","display","textDecoration","padding","fontWeight","color","activeLink","connect","authSelectors","to","exact","style","activeStyle","mapDispatchToProps","onLogout","authOperations","avatar","defaultAvatar","userMenuWrapper","src","alt","width","userMenuAvatar","Button","variant","onClick","AuthNav","Component","component","redirectTo","routeProps","render","props","restricted","HomeView","lazy","RegisterView","LoginView","ContactsView","App","this","onGetCurrentUser","fallback","path","ReactDOM","StrictMode","loading","document","getElementById","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","module","exports","id","number","filter"],"mappings":"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","file":"static/js/main.ba3fd22c.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\nconst registerRequest = createAction('auth/registerRequest');\nconst registerSuccess = createAction('auth/registerSuccess');\nconst registerError = createAction('auth/registerError');\n\nconst loginRequest = createAction('auth/loginRequest');\nconst loginSuccess = createAction('auth/loginSuccess');\nconst loginError = createAction('auth/loginError');\n\nconst logoutRequest = createAction('auth/logoutRequest');\nconst logoutSuccess = createAction('auth/logoutSuccess');\nconst logoutError = createAction('auth/logoutError');\n\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\n\nexport default {\n  registerRequest,\n  registerSuccess,\n  registerError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n};\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport authActions from './auth-actions';\n\nconst initialUserState = { name: null, email: null };\n\nconst user = createReducer(initialUserState, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\n  [authActions.logoutSuccess]: () => initialUserState,\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\nconst token = createReducer(null, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\n  [authActions.logoutSuccess]: () => null,\n});\n\nconst setError = (_, { payload }) => payload;\nconst error = createReducer(null, {\n  [authActions.registerError]: setError,\n  [authActions.loginError]: setError,\n  [authActions.logoutError]: setError,\n  [authActions.getCurrentUserError]: setError,\n});\n\nconst isAuthenticated = createReducer(false, {\n  [authActions.registerSuccess]: () => true,\n  [authActions.loginSuccess]: () => true,\n  [authActions.getCurrentUserSuccess]: () => true,\n  [authActions.registerError]: () => false,\n  [authActions.loginError]: () => false,\n  [authActions.getCurrentUserError]: () => false,\n  [authActions.logoutSuccess]: () => false,\n});\n\nexport default combineReducers({\n  user,\n  token,\n  error,\n  isAuthenticated,\n});\n","import axios from 'axios';\nimport authActions from './auth-actions';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\n/*\n * POST @ /users/signup\n * body { name, email, password }\n *\n * After successful registration we add a token to HTTP-header\n */\nconst register = credentials => async dispatch => {\n  dispatch(authActions.registerRequest());\n\n  try {\n    const response = await axios.post('/users/signup', credentials);\n    token.set(response.data.token);\n\n    dispatch(authActions.registerSuccess(response.data));\n  } catch (error) {\n    console.log(error);\n    dispatch(authActions.registerError(error.message));\n  }\n};\n\n/*\n * POST @ /users/login\n * body:\n *    { email, password }\n *\n * After successful login we add a token to HTTP-header\n */\nconst logIn = credentials => async dispatch => {\n  dispatch(authActions.loginRequest());\n  try {\n    const response = await axios.post('/users/login', credentials);\n    token.set(response.data.token);\n\n    dispatch(authActions.loginSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.loginError(error.message));\n  }\n};\n\n/*\n * POST @ /users/logout\n * headers:\n *    Authorization: Bearer token\n *\n * After successful logout we delete a token from HTTP-header\n */\nconst logOut = () => async dispatch => {\n  dispatch(authActions.logoutRequest());\n  try {\n    await axios.post('/users/logout');\n    dispatch(authActions.logoutSuccess());\n  } catch (error) {\n    dispatch(authActions.logoutError());\n  }\n};\n\n/*\n * GET @ /users/current\n * headers:\n *    Authorization: Bearer token\n *\n * 1. Take a token from the state through getState()\n * 2. If the token doesn't exist we exit not doing any of the operations\n * 3. If token exists we add it to its HTTP-header and run the operation\n */\nconst getCurrentUser = () => async (dispatch, getState) => {\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n  if (!persistedToken) {\n    return;\n  }\n  token.set(persistedToken);\n  dispatch(authActions.getCurrentUserRequest());\n  try {\n    const response = await axios.get('/users/current');\n    dispatch(authActions.getCurrentUserSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.getCurrentUserError(error.message));\n  }\n};\n\nexport default {\n  register,\n  logOut,\n  logIn,\n  getCurrentUser,\n};\n","const getIsAuthenticated = state => state.auth.isAuthenticated;\n\nconst getUsername = state => state.auth.user.name;\n\nexport default {\n  getIsAuthenticated,\n  getUsername,\n};\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { authReducer } from './auth';\r\nimport contactsReducer from '../redux/contacts/contacts-reducer';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware,\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","import styles from './Container.module.css';\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={styles.Container}> {children} </div>\r\n);\r\nexport default Container;\r\n","import { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { authSelectors } from '../redux/auth';\nconst styles = {\n  link: {\n    display: 'inline-block',\n    textDecoration: 'none',\n    padding: 12,\n    fontWeight: 700,\n    color: '#2A363B',\n  },\n  activeLink: {\n    color: '#018383',\n  },\n};\n\nconst Navigation = ({ isAuthenticated }) => (\n  <nav>\n    <NavLink to=\"/\" exact style={styles.link} activeStyle={styles.activeLink}>\n      Home page\n    </NavLink>\n\n    {isAuthenticated && (\n      <NavLink\n        to=\"/contacts\"\n        exact\n        style={styles.link}\n        activeStyle={styles.activeLink}\n      >\n        Contacts\n      </NavLink>\n    )}\n  </nav>\n);\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(Navigation);\n","export default __webpack_public_path__ + \"static/media/default-avatar.ec148682.jpg\";","import React from 'react';\nimport { connect } from 'react-redux';\nimport { authSelectors, authOperations } from '../../redux/auth';\nimport defaultAvatar from './default-avatar.jpg';\nimport Button from '@material-ui/core/Button';\nimport styles from './user-menu.module.css';\n\nconst UserMenu = ({ avatar, name, onLogout }) => (\n  <div className={styles.userMenuWrapper}>\n    <img src={avatar} alt={name} width=\"32\" className={styles.userMenuAvatar} />\n    <span className={styles.name}>{name}</span>\n    <Button variant=\"outlined\" color=\"white\" onClick={onLogout}>\n      Logout\n    </Button>\n  </div>\n);\nconst mapStateToProps = state => ({\n  name: authSelectors.getUsername(state),\n  avatar: defaultAvatar,\n});\n\nconst mapDispatchToProps = {\n  onLogout: authOperations.logOut,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\n","import { NavLink } from 'react-router-dom';\n\nconst styles = {\n  link: {\n    display: 'inline-block',\n    textDecoration: 'none',\n    padding: 12,\n    fontWeight: 700,\n    color: '#2A363B',\n  },\n  activeLink: {\n    color: '#E84A5F',\n  },\n};\n\nconst AuthNav = () => (\n  <div>\n    <NavLink\n      to=\"/register\"\n      exact\n      style={styles.link}\n      activeStyle={styles.activeLink}\n    >\n      Register\n    </NavLink>\n    <NavLink\n      to=\"/login\"\n      exact\n      style={styles.link}\n      activeStyle={styles.activeLink}\n    >\n      Login\n    </NavLink>\n  </div>\n);\n\nexport default AuthNav;\n","import { connect } from 'react-redux';\nimport Navigation from '../Navigation';\nimport UserMenu from '../UserMenu';\nimport AuthNav from '../AuthNav';\nimport { authSelectors } from '../../redux/auth';\n\nconst AppBar = ({ isAuthenticated }) => (\n  <header>\n    <Navigation />\n    {isAuthenticated ? <UserMenu /> : <AuthNav />}\n  </header>\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(AppBar);\n","import { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../../redux/auth';\r\n\r\n/**\r\n * If a route is privite and a user is logged, render a component\r\n * Otherwise it renders Redirect to /login\r\n */\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../../redux/auth';\r\n\r\n/**\r\n * If a route is restricted and a user is logged it renders redirect to /contacts\r\n * - Otherwise it renders a component\r\n */\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);\r\n","import Container from './Components/Container';\r\nimport { Component, Suspense, lazy } from 'react';\r\nimport AppBar from './Components/AppBar/AppBar';\r\nimport PrivateRoute from './Components/Routes/PrivateRoute';\r\nimport PublicRoute from './Components/Routes/PublicRoute';\r\nimport { authOperations } from './redux/auth';\r\nimport { connect } from 'react-redux';\r\nimport { Switch } from 'react-router-dom';\r\n\r\nconst HomeView = lazy(() => import('./views/HomeView'));\r\nconst RegisterView = lazy(() => import('./views/RegisterView'));\r\nconst LoginView = lazy(() => import('./views/LoginView'));\r\nconst ContactsView = lazy(() => import('./views/ContactsView'));\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.onGetCurrentUser();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <AppBar />\r\n        <Suspense fallback={<p>Loading...</p>}>\r\n          <Switch>\r\n            <PublicRoute exact path=\"/\" component={HomeView} />\r\n            <PublicRoute\r\n              path=\"/register\"\r\n              component={RegisterView}\r\n              restricted\r\n              redirectTo=\"/contacts\"\r\n            />\r\n            <PublicRoute\r\n              path=\"/login\"\r\n              restricted\r\n              component={LoginView}\r\n              redirectTo=\"/contacts\"\r\n            />\r\n            <PrivateRoute\r\n              path=\"/contacts\"\r\n              component={ContactsView}\r\n              redirectTo=\"/login\"\r\n            />\r\n          </Switch>\r\n        </Suspense>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onGetCurrentUser: authOperations.getCurrentUser,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport store from './redux/store';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store.store}>\r\n      <PersistGate loading={null} persistor={store.persistor}>\r\n        <BrowserRouter>\r\n          <App />\r\n        </BrowserRouter>\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// import { v4 as uuidv4 } from 'uuid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactsRequest = createAction(\r\n  'contacts/fetchContactsRequest',\r\n);\r\nexport const fetchContactsSuccess = createAction(\r\n  'contacts/fetchContactsSuccess',\r\n);\r\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction(\r\n  'contacts/deleteContactRequest',\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  'contacts/deleteContactSuccess',\r\n);\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userMenuAvatar\":\"user-menu_userMenuAvatar__1ksVe\",\"userMenuWrapper\":\"user-menu_userMenuWrapper__3ZT9X\",\"name\":\"user-menu_name__1-u5I\"};","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  changeFilter,\r\n  deleteContactRequest,\r\n  deleteContactError,\r\n  deleteContactSuccess,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n} from './contacts-actions';\r\n\r\nconst initialContacts = [\r\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n];\r\n\r\nconst contacts = createReducer(initialContacts, {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  filter,\r\n  loading,\r\n});\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__3eGWy\"};"],"sourceRoot":""}